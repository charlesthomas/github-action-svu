name: Build and Publish Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Set SVU_VERSION from go.mod
        run: |
          echo "SVU_VERSION=$(grep svu go.mod | tail -1 | rev | cut -f 1 -d ' ' | rev | tr -d v)" >> "$GITHUB_ENV"

      - name: svu
        id: svu
        uses: charlesthomas/github-action-svu@v0.14.0-1.12.0
        with:
          clone: true
          pushTag: true
          suffix: ${{ env.SVU_VERSION }}

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        if: ${{ steps.svu.outputs.changed }} == 'true'
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ steps.svu.outputs.changed }} == 'true'

      - name: registry auth
        uses: docker/login-action@5139682d94efc37792e6b54386b5b470a68a4737
        if: ${{ steps.svu.outputs.changed }} == 'true'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: image metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        if: ${{ steps.svu.outputs.changed }} == 'true'
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,value=${{ steps.svu.outputs.version }}

      - name: build & push image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        if: ${{ steps.svu.outputs.changed }} == 'true'
        with:
          build-args: SVU_VERSION=${{ env.SVU_VERSION }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: github release
        if: ${{ steps.svu.outputs.changed }} == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.svu.outputs.version }}
